input {
  tcp {
    port => 5000
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
  file {
    path => "/pai-logs/*"
    start_position => "beginning"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  grok {
    match => { "message" => "(?<Timestamp>\d{4}-\d\d-\d\d \d\d:\d\d:\d\d\.\d{4})\|%{WORD:Hostname}\|%{POSINT:ProcessID}\|%{POSINT:ThreadID}\|%{LOGLEVEL:Log_Level}\|(?<Message_Source>.*)\|%{WORD:md5sum}\|%{GREEDYDATA:Message}\|" }
    match => { "message" => "(?<Timestamp>\d{4}-\d\d-\d\d \d\d:\d\d:\d\d\.\d{4})\|%{WORD:Hostname}\|%{POSINT:ProcessID}\|%{POSINT:ThreadID}\|%{LOGLEVEL:Log_Level}\|(?<Message_Source>.*)\|%{GREEDYDATA:Message}\|" }
    match => { "message" => "(?<Timestamp>\d{4}-\d\d-\d\d \d\d:\d\d:\d\d\.\d{4})\|%{WORD:Hostname}\|%{POSINT:ProcessID}\|%{POSINT:ThreadID}\|%{LOGLEVEL:Log_Level}\|(?<Message_Source>.*)\|%{GREEDYDATA:Message}" }
  }
  date {
    match => [ "Timestamp", "yyyy-MM-dd HH:mm:ss.SSSS" ]
    timezone => "PST8PDT"
  }
  mutate {
    remove_field => [ "md5sum" ]
  }
  if [Hostname] =~ /^(PAIAPPv1|PAIWEBv0|SACWEBv1)/ {
    mutate {
      add_field => {
        "Environment" => "Production"
      }
    }
  } else if [Hostname] =~ /^(SACAPPv2|SACWEBv4)/ {
    mutate {
      add_field => {
        "Environment" => "Stage"
      }
    }
  } else {
    mutate {
      add_field => {
        "Environment" => "Unknown"
      }
    }
  }
  mutate {
    add_field => {
      "Service" => "%{path}"
    }
  }
}

output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    hosts => "elasticsearch:9200"
  }
}
