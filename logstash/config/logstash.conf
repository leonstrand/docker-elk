input {
	tcp {
		port => 5000
		codec => multiline {
			pattern => "^%{TIMESTAMP_ISO8601}"
			negate => true
			what => "previous"
		}
	}
}

## Add your filters here
filter {
	grok {
		#match => { "message" => "
		#}
		match => { "message" => "(?<PAI_Timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{4})\|%{WORD:PAI_Hostname}\|%{POSINT:PAI_Process_ID}\|%{POSINT:PAI_Thread_ID}\|%{LOGLEVEL:PAI_Log_Level}\|(?<PAI_Message_Source>.*)\|%{WORD:PAI_md5sum}\|%{GREEDYDATA:PAI_Message}\|" }
		match => { "message" => "(?<PAI_Timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{4})\|%{WORD:PAI_Hostname}\|%{POSINT:PAI_Process_ID}\|%{POSINT:PAI_Thread_ID}\|%{LOGLEVEL:PAI_Log_Level}\|(?<PAI_Message_Source>.*)\|%{GREEDYDATA:PAI_Message}\|" }
		match => { "message" => "(?<PAI_Timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{4})\|%{WORD:PAI_Hostname}\|%{POSINT:PAI_Process_ID}\|%{POSINT:PAI_Thread_ID}\|%{LOGLEVEL:PAI_Log_Level}\|(?<PAI_Message_Source>.*)\|%{GREEDYDATA:PAI_Message}" }
	}
	date {
		match => [ "PAI_Timestamp", "yyyy-MM-dd HH:mm:ss.SSSS" ]
	}
}

output {
	stdout {
		codec => rubydebug
	}
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
